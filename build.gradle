plugins {
    id 'java'
}

allprojects {
    apply plugin: 'java'

    group = "com.lauriethefish.betterportals"

    // Optional, just for showing name
    afterEvaluate {
        println("Evaluating project ${project.group}:${archivesBaseName}:${version}")
    }

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            name = "papermc"
            url = uri("https://repo.papermc.io/repository/maven-public/")
        }
        maven { url "https://repo.dmulloy2.net/repository/public/" }
    }

    compileJava.options.encoding = 'UTF-8'

    dependencies {
        implementation 'com.google.inject:guice:7.0.0'
        implementation 'com.google.inject.extensions:guice-assistedinject:7.0.0'
        implementation 'org.jetbrains:annotations:26.0.1'
        implementation 'com.github.spotbugs:spotbugs-annotations:4.8.6'

        compileOnly 'org.projectlombok:lombok:1.18.34'
        testImplementation 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    }

    tasks {
        compileJava {
            options.release.set(21)
        }
    }


    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
        sourceCompatibility = '21'
        targetCompatibility = '21'
    }
}

jar.enabled = false
build.enabled = false

subprojects {
    if (System.getenv('BP_DEVELOPER_BUILD') == '1') {
        version = gradle.ext.versionName + '-' + "git rev-parse --verify --short HEAD".execute().text.trim().toLowerCase()
    } else {
        version = gradle.ext.versionName
    }

    archivesBaseName = "${rootProject.name}-${project.name}"
}